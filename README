== Introduction

Ruby has many useful libraries. It may take a lot of time to re-implement them
in other languages.

This project aims to create a server that accepts Ruby code from remote
clients (Ruby, Erlang, Java, C...), evaluates them, then sends back the results.

The server supports session:
* Each connection has its own binding (http://www.ruby-doc.org/core/classes/Binding.html)
* A client may keep a persistent connection and send one line of code at a time,
new lines of code will reuse the resulting binding of previous lines

== Communication specification

Code sent to the server and results from the server are in the form:
* header + payload
* header is a 4-byte big-endian integer indicating payload length
* payload is a string, not terminated with null byte

== Examples

See "example" directory.

Start server:
ruby bin/revaler.rb localhost 9999

Run Ruby client:
ruby example/ruby_client.rb localhost 9999
